@page "/"
@using System.Net.Http.Json
@using System.Text.RegularExpressions
@inject IHttpClientFactory factory
@inject TokenModel tokenInfo

<PageTitle>Index</PageTitle>

@if( isLoggedIn)
{
    <h1>You are logged in.</h1>
    <button class="btn btn-danger" @onclick="LogOut">Log Out</button>
}
else
{
     <h1>Please Login</h1>
     <div class="h3 text-danger">
         @errorMessage
     </div>
    <EditForm Model="login" OnValidSubmit="HandleValidSubmit">
        <InputText @bind-Value="login.UserName"/>
        <InputText type="password" @bind-Value="login.Password"/>
        <button class="btn btn-success" type="submit">Log In</button>
    </EditForm>  
}



@code{
    private AuthenticationModel login = new();
    private bool isLoggedIn = false;
    private string errorMessage;

    protected override void OnInitialized()
    {
        isLoggedIn = !string.IsNullOrWhiteSpace(tokenInfo.Token);
    }

    private async void HandleValidSubmit()
    {
        errorMessage = "";
        var client = factory.CreateClient("api");

        var info = await client.PostAsJsonAsync<AuthenticationModel>("Authentication/token", login);
        tokenInfo.Token = await info.Content.ReadAsStringAsync();

        Match m = Regex.Match(tokenInfo.Token, ".*\"title\":\"Unauthorized\",\"status\":401.*");

        if(m.Success)
        {
            errorMessage = "Invalid Login Attempt;";
        }
        else
        {
            isLoggedIn = true;
        }


        await InvokeAsync(StateHasChanged);
    }

    private void LogOut()
    {
        tokenInfo.Token = "";
        isLoggedIn = false;
    }
}